{"version":3,"sources":["../src/index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import extend from 'object-assign';\r\nimport Promise from 'bluebird';\r\nimport {install as installSourceMaps} from 'source-map-support';\r\nimport {readFile, writeFile} from './fs';\r\nimport {lexer as lexMarkdown} from 'marked';\r\nimport {parse as parseSpec} from './grammar';\r\nimport toTypeScriptDef from './to-dts';\r\n\r\ninstallSourceMaps();\r\n\r\nvar rootDir = `${__dirname}/..`;\r\n\r\nfunction mergeObj(...objects) {\r\n\treturn extend(Object.create(null), ...objects);\r\n}\r\n\r\nfunction mergeArr(...arrays) {\r\n\treturn [...new Set(arrays.flat())];\r\n}\r\n\r\nfunction readSpec(name) {\r\n\treturn readFile(`${rootDir}/estree/${name}.md`, 'utf-8')\r\n\t\t.then(lexMarkdown)\r\n\t\t.filter(token => token.type === 'code')\r\n\t\t.map(token => token.text)\r\n\t\t.all()\r\n\t\t.then(chunks => parseSpec(chunks.join('\\n')));\r\n}\r\n\r\nfunction resolveExtends(extension, base) {\r\n\tvar result = mergeObj(base);\r\n\tfor (let name in extension) {\r\n\t\tlet item = extension[name];\r\n\t\tif (item.kind === 'interface' && name in base) {\r\n\t\t\tlet baseItem = base[name];\r\n\r\n\t\t\tresult[name] = mergeObj(baseItem, {\r\n\t\t\t\tprops: mergeObj(baseItem.props, item.props),\r\n\t\t\t\tbase: mergeArr(baseItem.base, item.base || [])\r\n\t\t\t});\r\n\t\t} else if (item.kind === 'enum' && name in base) {\r\n\t\t\tlet baseItem = base[name];\r\n\r\n\t\t\tresult[name] = mergeObj(baseItem, {\r\n\t\t\t\tvalues: mergeArr(baseItem.values, item.values)\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tresult[name] = item;\r\n\t\t}\r\n\t}\r\n\treturn result;\r\n}\r\n\r\nfunction writeSpec(name, spec) {\r\n\treturn Promise.all([\r\n\t\twriteFile(\r\n\t\t\t`${rootDir}/formal-data/typescript/${name}.d.ts`,\r\n\t\t\ttoTypeScriptDef(spec)\r\n\t\t),\r\n\t\twriteFile(\r\n\t\t\t`${rootDir}/formal-data/${name}.json`,\r\n\t\t\tJSON.stringify(spec, null, 2)\r\n\t\t)\r\n\t]).then(() => spec);\r\n}\r\n\r\nfunction readWriteSpecs(remainingSpecs, baseSpec) {\r\n\tconst specName = remainingSpecs.shift();\r\n\tif (!specName)\r\n\t\treturn;\r\n\r\n\treadSpec(specName)\r\n\t\t.then(spec => writeSpec(specName, baseSpec ? resolveExtends(spec, baseSpec) : spec))\r\n\t\t.then(spec => readWriteSpecs(remainingSpecs, spec));\r\n}\r\n\r\nreadWriteSpecs(['es5', 'es2015', 'es2016', 'es2017', 'es2018', 'es2019', 'es2020', 'es2021', 'es2022']);\r\n"]}